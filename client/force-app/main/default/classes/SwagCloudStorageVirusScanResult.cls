/*
 * virusapi
 * The Cloudmersive Virus Scan API lets you scan files and content for viruses and identify security issues with content.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Result of running a virus scan on cloud storage
 */
public class SwagCloudStorageVirusScanResult implements Swagger.MappedProperties {
    /**
     * True if the operation of retrieving the file, and scanning it were successfully completed, false if the file could not be downloaded from cloud storage, or if the file could not be scanned.  Note that successful completion does not mean the file is clean; for the output of the virus scanning operation itself, use the CleanResult and FoundViruses parameters.
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * True if the scan contained no viruses, false otherwise
     * @return cleanResult
     */
    public Boolean cleanResult { get; set; }

    /**
     * Array of viruses found, if any
     * @return foundViruses
     */
    public List<SwagCloudStorageVirusFound> foundViruses { get; set; }

    /**
     * Detailed error message if the operation was not successful
     * @return errorDetailedDescription
     */
    public String errorDetailedDescription { get; set; }

    /**
     * Size in bytes of the file that was retrieved and scanned
     * @return fileSize
     */
    public Long fileSize { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Successful' => 'successful',
        'CleanResult' => 'cleanResult',
        'FoundViruses' => 'foundViruses',
        'ErrorDetailedDescription' => 'errorDetailedDescription',
        'FileSize' => 'fileSize'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagCloudStorageVirusScanResult() {
        foundViruses = new List<SwagCloudStorageVirusFound>();
    }

    public static SwagCloudStorageVirusScanResult getExample() {
        SwagCloudStorageVirusScanResult cloudStorageVirusScanResult = new SwagCloudStorageVirusScanResult();
        cloudStorageVirusScanResult.successful = true;
        cloudStorageVirusScanResult.cleanResult = true;
        cloudStorageVirusScanResult.foundViruses = new List<SwagCloudStorageVirusFound>{SwagCloudStorageVirusFound.getExample()};
        cloudStorageVirusScanResult.errorDetailedDescription = 'aeiou';
        cloudStorageVirusScanResult.fileSize = 123456789L;
        return cloudStorageVirusScanResult;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagCloudStorageVirusScanResult) {
            SwagCloudStorageVirusScanResult cloudStorageVirusScanResult = (SwagCloudStorageVirusScanResult) obj;
            return this.successful == cloudStorageVirusScanResult.successful
                && this.cleanResult == cloudStorageVirusScanResult.cleanResult
                && this.foundViruses == cloudStorageVirusScanResult.foundViruses
                && this.errorDetailedDescription == cloudStorageVirusScanResult.errorDetailedDescription
                && this.fileSize == cloudStorageVirusScanResult.fileSize;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (cleanResult == null ? 0 : System.hashCode(cleanResult));
        hashCode = (17 * hashCode) + (foundViruses == null ? 0 : System.hashCode(foundViruses));
        hashCode = (17 * hashCode) + (errorDetailedDescription == null ? 0 : System.hashCode(errorDetailedDescription));
        hashCode = (17 * hashCode) + (fileSize == null ? 0 : System.hashCode(fileSize));
        return hashCode;
    }
}

